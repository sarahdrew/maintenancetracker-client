{"version":3,"sources":["hammer-icon.png","tracker-gif.png","tracker1.PNG","tracker2.PNG","tracker-completed.png","LandingPage/LandingPage.js","config.js","services/token-service.js","services/request-api-service.js","contexts/RequestsContext.js","LoadingPage/LoadingPage.js","AllRequests/AllRequests.js","services/auth-api-service.js","Registration/Registration.js","SignIn/SignIn.js","ApiContext.js","RequestsForm/RequestsForm.js","CreateRequest/CreateRequest.js","SignedIn/SignedIn.js","Nav/Nav.js","TrackerImage/TrackerImage.js","RequestPage/RequestPage.js","RequestSent/RequestSent.js","App.js","index.js"],"names":["module","exports","LandingPage","className","src","require","alt","Component","API_ENDPOINT","TOKEN_KEY","TokenService","saveAuthToken","token","window","localStorage","setItem","config","getAuthToken","getItem","clearAuthToken","removeItem","hasAuthToken","makeBasicAuthToken","userName","password","btoa","RequestApiService","getAllRequests","fetch","then","res","ok","json","e","Promise","reject","responseJson","requests","getRequest","requestsId","headers","request","React","createContext","LoadingPage","AllRequests","props","state","loading","context","setRequests","setState","catch","error","console","this","map","item","key","to","id","activeStyle","color","title","description","contextType","RequestsContext","AuthApiService","postUser","user","method","body","JSON","stringify","err","log","postLogin","email","authToken","postRefreshToken","queueCallbackBeforeExpiry","Registration","handleSubmit","event","preventDefault","target","full_name","landlord_tenant","value","onRegistrationSuccess","history","push","onSubmit","role","Object","keys","htmlFor","type","name","required","defaultProps","SignIn","handleSubmitBasicAuth","ev","onSigninSuccess","isSignedIn","addRequest","updateRequests","RequestsForm","otherProps","join","action","CreateRequest","response","placeholder","onChange","ApiContext","SignedIn","Nav","TrackerImage","status","message","width","match","params","RequestPage","update","setRequest","checked","content","undefined","renderRequest","RequestSent","App","Provider","exact","path","component","process","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e2547276.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/hammer-icon.4d95127b.png\";","module.exports = __webpack_public_path__ + \"static/media/tracker-gif.e6d0bc3b.png\";","module.exports = __webpack_public_path__ + \"static/media/tracker1.12ed23d8.PNG\";","module.exports = __webpack_public_path__ + \"static/media/tracker2.b297c7c8.PNG\";","module.exports = __webpack_public_path__ + \"static/media/tracker-completed.349cdf0a.png\";","import React, { Component } from 'react';\nimport './LandingPage.css';\n\nexport default class LandingPage extends Component {\n    render() {\n        return (\n            <>\n                <div className=\"headline\">\n                    <div className=\"icon-image\">\n                        <img src={require('../hammer-icon.png')} alt=\"maintenancetracker logo\" />\n                        <h2>MaintenanceTracker</h2>\n                    </div>\n\n                    <h3>A space for landlords and tenants to communicate efficiently</h3>\n                    <h4>Tenants submit requests, landlords update progress.</h4>\n                    <div className=\"trackergif\">\n                        <img src={require('../tracker-gif.png')} alt=\"maintenancetracker gif\" />\n\n                    </div>\n                </div>\n                <div className=\"LandingPage\">\n\n\n                    <div className=\"explanation\">\n\n                        How to get started:\n                        <ul><li>Register for an account</li>\n                            <li>Sign in with account credentials</li>\n                            <li>Check listings to update status or create a listing</li></ul>\n\n                        <b>To get started using a demo, head to the sign in page and use the demo credentials.</b>\n\n\n                    </div>\n                </div>\n\n            </>\n        )\n    }\n\n\n\n}","export default {\n    API_ENDPOINT: `https://maintenancetracker-server.herokuapp.com`,\n    TOKEN_KEY: `tokenKey`\n};\n\n// ","import config from '../config'\n\nconst TokenService = {\n    saveAuthToken(token) {\n        window.localStorage.setItem(config.TOKEN_KEY, token)\n    },\n    getAuthToken() {\n        return window.localStorage.getItem(config.TOKEN_KEY)\n    },\n    clearAuthToken() {\n        window.localStorage.removeItem(config.TOKEN_KEY)\n    },\n    hasAuthToken() {\n        return !!TokenService.getAuthToken()\n    },\n    makeBasicAuthToken(userName, password) {\n        return window.btoa(`${userName}:${password}`)\n    },\n}\n\nexport default TokenService\n","import TokenService from './token-service';\nimport config from '../config'\n\n\n\nconst RequestApiService = {\n    getAllRequests() {\n        return fetch(`${config.API_ENDPOINT}/api/requests`)\n            .then(res =>\n                (!res.ok)\n                    ? res.json().then(e => Promise.reject(e))\n                    : res.json()\n            )\n            .then(responseJson => {\n\n                return responseJson\n            })\n            .then(requests => {\n\n                return requests;\n\n\n            })\n\n    },\n    getRequest(requestsId) {\n        return fetch(`${config.API_ENDPOINT}/api/requests/${requestsId}`, {\n            headers: {\n                'authorization': `basic ${TokenService.getAuthToken()}`\n            },\n        })\n            .then(res =>\n                (!res.ok)\n                    ? res.json().then(e => Promise.reject(e))\n                    : res.json()\n            )\n            .then(responseJson => {\n\n                return responseJson\n            })\n            .then(request => {\n\n                return request\n            })\n\n    }\n}\nexport default RequestApiService","import React from 'react';\n\n\nexport default React.createContext();\n","import React, { Component } from 'react';\nimport './LoadingPage.css'\n\nexport default class LoadingPage extends Component {\n    render() {\n        return (\n            <div className=\"loading\">\n                <h2>LOADING . . . </h2>\n            </div>\n\n\n        )\n    }\n}","import React, { Component } from 'react';\nimport RequestApiService from '../services/request-api-service';\nimport RequestsContext from '../contexts/RequestsContext';\nimport LoadingPage from '../LoadingPage/LoadingPage';\n\nimport { NavLink } from \"react-router-dom\";\n\nexport default class AllRequests extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: true\n        }\n    }\n\n    static contextType = RequestsContext\n\n    componentDidMount() {\n        RequestApiService.getAllRequests()\n            .then(requests => { this.context.setRequests(requests); this.setState({ loading: false }) })\n            .catch(error => console.error(error))\n    }\n    render() {\n\n        return (\n            this.state.loading ? <LoadingPage /> :\n                <div className=\"total-request-item\">\n                    <div className=\"request-content\">\n                        <header className=\"totalRequestItem__header\">\n                            <h2> All requests for landlord:</h2>\n                        </header>\n                        {\n                            this.context.requests.map((request, item) => {\n\n                                return (\n\n                                    <div key={item} className=\"requests\">\n\n                                        <p ><NavLink to={`/requests/${request.id}`} activeStyle={{ color: 'green' }}> Request Title: {request.title}</NavLink></p>\n\n                                        <p >{request.description}</p>\n\n                                    </div>\n                                );\n                            })\n                        }\n                    </div>\n                </div>\n\n        )\n    }\n}","import config from '../config'\nimport TokenService from './token-service'\n\nconst AuthApiService = {\n    postUser(user) {\n        return fetch(`${config.API_ENDPOINT}/api/users`, {\n            method: 'POST',\n            headers: {\n                'content-type': 'application/json',\n            },\n            body: JSON.stringify(user),\n        })\n            .then(res => {\n                return res.json();\n\n                // (!res.ok)\n                //     ? res.json().then(e => Promise.reject(e))\n                //     : res.json()\n            })\n            .catch(err => {\n                console.log(err)\n            })\n    },\n\n    postLogin({ email, password }) {\n        return fetch(`${config.API_ENDPOINT}/api/auth/login`, {\n            method: 'POST',\n            headers: {\n                'content-type': 'application/json',\n            },\n            body: JSON.stringify({ email, password }),\n        })\n            .then(res =>\n                (!res.ok)\n                    ? res.json().then(e => Promise.reject(e))\n                    : res.json()\n            )\n            .then(res => {\n\n                TokenService.saveAuthToken(res.authToken)\n\n                // TokenService.queueCallbackBeforeExpiry(() => {\n                //     AuthApiService.postRefreshToken()\n                // })\n                return res\n            })\n            .catch(err => {\n                // console.log(err)\n            })\n    },\n    postRefreshToken() {\n        return fetch(`${config.API_ENDPOINT}/api/auth/refresh`, {\n            method: 'POST',\n            headers: {\n                'authorization': `Bearer ${TokenService.getAuthToken()}`,\n            },\n        })\n            .then(res =>\n                (!res.ok)\n                    ? res.json().then(e => Promise.reject(e))\n                    : res.json()\n            )\n            .then(res => {\n\n                TokenService.saveAuthToken(res.authToken)\n                TokenService.queueCallbackBeforeExpiry(() => {\n                    AuthApiService.postRefreshToken()\n                })\n                return res\n            })\n            .catch(err => {\n\n                console.error(err)\n            })\n    },\n}\n\nexport default AuthApiService","import React, { Component } from 'react'\n//import { Button, Input, Required } from '../Utils/Utils';\nimport AuthApiService from '../../src/services/auth-api-service';\nimport './Registration.css'\n\nexport default class Registration extends Component {\n    static defaultProps = {\n        onRegistrationSuccess: () => { }\n    }\n\n    state = { error: null }\n\n    handleSubmit = event => {\n        event.preventDefault()\n\n\n        const { full_name, email, password, landlord_tenant } = event.target\n        this.setState({ error: null })\n        AuthApiService.postUser({\n            email: email.value,\n            password: password.value,\n            full_name: full_name.value,\n            landlord_tenant: landlord_tenant.value\n        })\n            .then(user => {\n                full_name.value = ''\n                email.value = ''\n                password.value = ''\n                landlord_tenant.value = ''\n                this.props.onRegistrationSuccess();\n                this.props.history.push(`/sign-in`)\n\n            })\n\n            .catch(res => {\n                this.setState({ error: res.error })\n            })\n\n\n    }\n\n    render() {\n        const { error } = this.state\n        return (\n            <>\n                <div className=\"headline\">\n                    <h3>Register for an account</h3>\n                </div>\n                <div className=\"total-registration-form\">\n                    <form\n                        className='RegistrationForm'\n                        onSubmit={this.handleSubmit}\n                    >\n\n                        <div role='alert'>\n                            {error && <p className='red'>{Object.keys(error)}</p>}\n                        </div>\n                        <div className=\"landlord_tenant\">\n                            <div className=\"choice\">I am a ...</div>\n                            <div className=\"landlord-radio\">\n                                <label htmlFor=\"landlord_tenant\">Landlord   </label>\n                                <input\n                                    type='radio'\n                                    name='landlord_tenant'\n                                    required\n                                    id='RegistrationForm__landlord'\n                                    value=\"landlord\" />\n\n                            </div>\n                            <div className=\"tenant-radio\">\n                                <label htmlFor=\"tenant_tenant\">       Tenant</label>\n                                <input\n                                    type='radio'\n                                    name='landlord_tenant'\n                                    required\n                                    id='RegistrationForm__tenant'\n                                    value=\"tenant\" />\n\n                            </div>\n                        </div>\n\n                        <div className='full_name'>\n                            <label htmlFor='RegistrationForm__full_name'>\n                                Full name\n                            </label>\n                            <input\n                                type='text'\n                                name='full_name'\n                                required\n                                id='RegistrationForm__full_name' />\n\n                        </div>\n                        <div className='email'>\n                            <label htmlFor='RegistrationForm__email'>\n                                Email\n                            </label>\n                            <input\n                                type='text'\n                                name='email'\n\n                                required\n                                id='RegistrationForm__email' />\n\n                        </div>\n                        <div className='password'>\n                            <p><i>Password must be at least 8 characters long, contain a special character, one upper case letter and one lower case letter.</i></p>\n                            <label htmlFor='RegistrationForm__password'>\n                                Password\n                            </label>\n\n                            <input\n                                type='password'\n                                name='password'\n                                required\n                                id='RegistrationForm__password' />\n\n                        </div>\n                        <button type='submit'> Register</button>\n                    </form>\n                </div>\n            </>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport TokenService from '../services/token-service'\nimport AuthApiService from '../../src/services/auth-api-service';\n\nexport default class SignIn extends Component {\n    static defaultProps = {\n        onSigninSuccess: () => { },\n        isSignedIn: false,\n    }\n\n    state = { error: null }\n\n    handleSubmitBasicAuth = ev => {\n        ev.preventDefault()\n        const { email, password } = ev.target\n        TokenService.saveAuthToken(TokenService.makeBasicAuthToken(email.value, password.value))\n\n        AuthApiService.postLogin({\n            email: email.value,\n            password: password.value\n        })\n            .then(user => {\n                email.value = ''\n                password.value = ''\n                this.props.onSigninSuccess()\n\n                this.setState({ isSignedIn: true })\n                this.props.history.push(`/signed-in`)\n\n            })\n            .catch(res => {\n\n            })\n\n    }\n\n    render() {\n        const { error } = this.state\n        return (\n            <>\n                <div className=\"demo-explanation\">\n                    <p>For a demo, use the following credentials:</p>\n                    <p>email: demo@maintenancetracker.com</p>\n                    <p>Password: Demo123!</p>\n                    <p>Otherwise, sign in with your registered information.</p>\n                </div>\n                <form\n                    className='SigninForm'\n                    onSubmit={this.handleSubmitBasicAuth}\n                >\n                    <div role='alert'>\n                        {error && <p className='red'>{error}</p>}\n                    </div>\n                    <div className='email'>\n                        <label htmlFor='SigninForm__email'>\n                            email\n          </label>\n                        <input\n                            type=\"text\"\n                            required name='email' id='SigninForm__email' />\n\n                    </div>\n                    <div className='password'>\n                        <label htmlFor='SigninForm__password'>\n                            Password\n          </label>\n                        <input\n                            required name='password' type='password' id='SigninForm__password' />\n\n                    </div>\n                    <button type=\"submit\">Sign In</button>\n\n                </form>\n            </>\n\n\n\n        )\n    }\n}\n","import React from \"react\";\n\nexport default React.createContext({\n    requests: [],\n    addRequest: () => { },\n    updateRequests: () => { },\n})","import React from \"react\";\n\n\nexport default function RequestsForm(props) {\n    const { className, ...otherProps } = props;\n    return (\n        <form\n            className={[\"Requests-form\", className].join(\" \")}\n            action=\"#\"\n            {...otherProps}\n        />\n    );\n}\n","import React, { Component } from 'react';\nimport config from \"../config\";\nimport ApiContext from \"../ApiContext\";\nimport RequestsForm from '../RequestsForm/RequestsForm';\nimport TokenService from '../services/token-service';\nimport './CreateRequest.css'\n\nexport default class CreateRequest extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            title: '',\n            description: '',\n\n\n        }\n    }\n\n    updateRequests(title, description) {\n        this.setState({ title, description })\n    }\n\n    static defaultProps = {\n        history: {\n            push: () => { }\n        }\n    };\n    static contextType = ApiContext;\n\n\n    addRequest = request => {\n\n        this.setState({\n            requests: [...this.state.request, request]\n        });\n    };\n\n    handleSubmit = event => {\n        event.preventDefault();\n\n\n        const request = {\n            title: event.target[\"title\"].value,\n            description: event.target[\"description\"].value,\n        }\n\n        fetch(`${config.API_ENDPOINT}/api/requests`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                'Authorization': `bearer ${TokenService.getAuthToken()}`\n            },\n            body: JSON.stringify(request)\n        })\n            .then(response => {\n                if (!response.ok) {\n                    return response.json().then(e => Promise.reject(e));\n                }\n\n                return response.json()\n            })\n            .then(request => {\n                this.context.addRequest(request);\n                this.props.history.push(`/requests/${request.id}`)\n\n            })\n            .catch(error => {\n                console.error({ error })\n            })\n\n    }\n\n\n\n\n    render() {\n        return (\n            <section className=\"create-request\">\n                <h1>Create a request</h1>\n                <p>You can create your request as a signed-in user. Enter in your request below.</p>\n                <div className=\"request-not-working\"> Request not working? Make sure you've registered for an account and signed in.</div>\n                <RequestsForm onSubmit={this.handleSubmit}>\n                    <div className=\"field\">\n                        <label htmlFor=\"title\">Title</label>\n                        <input placeholder='Leaky faucet'\n                            type=\"text\"\n                            name='title'\n                            id='title'\n                            onChange={event => this.updateRequests(event.target.value)} />\n                    </div>\n\n                    <div className=\"field\">\n                        <label htmlFor=\"description\">Description:</label>\n                        <input type=\"text\" name='description' id='description' placeholder=\"Faucet in the bathroom leaks when tap is off\"\n                            onChange={event => this.updateRequests(event.target.value)} />\n                    </div>\n\n\n                    <button type='submit' onSubmit={this.handleSubmit}>Send my request</button>\n\n                </RequestsForm>\n\n\n            </section>\n        )\n    }\n}","import React, { Component } from 'react';\n//import { Link } from \"react-router-dom\";\n\nexport default class SignedIn extends Component {\n    render() {\n        return (\n\n            <div className=\"signed-in\">\n                <h2>Successfully signed in!</h2>\n\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport './Nav.css'\n\nexport default class Nav extends Component {\n    render() {\n\n        return (<>\n            <div className=\"Nav\">\n\n            </div>\n            <div className=\"links\">\n                <Link to='/' >Home</Link>  |\n                     <Link to='/register'> Register </Link> |\n                     <Link to='sign-in'> Sign In </Link> |\n                    <Link to='/requests'> All Requests</Link> |\n                     <Link to='/create-request'> Create Request</Link>\n            </div>\n        </>)\n\n    }\n\n\n\n}\n","import React, { Component } from 'react';\nimport RequestsContext from '../contexts/RequestsContext';\n\n\n\nexport default class TrackerImage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            title: '',\n            description: '',\n            status: '',\n            message: '',\n\n        }\n    }\n    static defaultProps = {\n        match: { params: {} },\n\n    }\n\n\n\n    static contextType = RequestsContext\n\n    render() {\n        if (this.context.request.status === 'received') {\n            return <img src={require('../tracker1.PNG')} alt=\"trackerfor request received\" width=\"200\" />\n        }\n        if (this.context.request.status === 'started') {\n            return <img src={require('../tracker2.PNG')} alt=\"tracker for request started\" width=\"200\" />\n        }\n        if (this.context.request.status === 'completed') {\n            return <img src={require('../tracker-completed.png')} alt=\"tracker for request completed\" width=\"200\" />\n        }\n        else {\n            return <></>\n        }\n    }\n}","import React, { Component } from 'react';\nimport RequestsContext from '../contexts/RequestsContext';\nimport RequestApiService from '../services/request-api-service';\nimport TokenService from '../services/token-service';\nimport config from '../config';\nimport TrackerImage from '../TrackerImage/TrackerImage';\nimport \"../AllRequests/AllRequests.css\"\n\nexport default class RequestPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            title: '',\n            description: '',\n            status: '',\n            message: '',\n\n        }\n    }\n    static defaultProps = {\n        match: { params: {} },\n\n    }\n\n\n\n    static contextType = RequestsContext\n\n\n    updateRequests(title, description, status, message) {\n        this.setState({\n            title: title,\n            description: description,\n            status: status,\n            message: message,\n\n        })\n    }\n\n    componentDidMount() {\n        const { requestsId } = this.props.match.params\n\n        RequestApiService.getRequest(requestsId)\n            .then(request => this.context.setRequest(request))\n            .catch(error => console.error(error))\n    }\n\n\n    handleSubmit = event => {\n        event.preventDefault();\n\n        const update = {\n            title: this.context.request.title,\n            description: this.context.request.description,\n            status: event.target.status.value,\n            message: event.target.message.value,\n            id: this.context.request.id\n        }\n        fetch(`${config.API_ENDPOINT}/api/requests/${this.context.request.id}`, {\n            method: \"PUT\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                'Authorization': `bearer ${TokenService.getAuthToken()}`\n            },\n            body: JSON.stringify(update)\n        })\n            .then(response => {\n\n                if (!response.ok) {\n                    return response.json().then(e => Promise.reject(e));\n                }\n\n                return response.json()\n            })\n            .then(update => {\n\n                this.context.updateRequests(update);\n\n            })\n            .catch(error => {\n                console.error({ error })\n            })\n\n    }\n\n    renderRequest() {\n        const { request } = this.context\n\n        return <>\n            <div className=\"total-request-item\">\n                <div className=\"request-info\">\n                    <b> Title: </b>\n                    {request.title}\n\n                    <p> <b>Description: </b>{request.description}</p>\n                    {this.context.request.status &&\n                        <div className=\"status-image\">\n                            <p>Current status: {this.context.request.status}</p>\n                            <p><TrackerImage /></p>\n                        </div>\n                    }\n                    Message: {request.message}\n                </div>\n                <div className=\"status-form\">\n                    <form onSubmit={this.handleSubmit}>\n                        <div className=\"just-status\">\n                            <div className=\"whats-the-status\">\n                                <label htmlFor=\"status\">What's the status?</label>\n                            </div>\n\n                            <div className=\"status-received\">\n                                <input type='radio' name='status' value=\"received\" checked=\"checked\"\n                                    onChange={event => this.updateRequests(event.target.value)} />  received\n                            </div>\n                            <div className=\"status-start\">\n                                <input type='radio' name='status' value=\"started\"\n                                    onChange={event => this.updateRequests(event.target.value)} />  started\n                            </div>\n                            <div className=\"status-completed\">\n                                <input type='radio' name='status' value=\"completed\"\n                                    onChange={event => this.updateRequests(event.target.value)} />  completed\n                            </div>\n                        </div>\n                        <div className=\"message\">\n                            <label htmlFor=\"message\">Message about request</label>\n                            <input type=\"text\" name='message' placeholder=\"None for now\" />\n                            <button type=\"submit\"> Update progress</button>\n                        </div>\n\n\n                    </form>\n                </div>\n            </div>\n        </>\n\n    }\n\n    renderUpdatedRequest() {\n        const { request } = this.context\n        return (\n            <>\n                <div className=\"total-request-item\">\n                    <h2>Title: </h2>\n                    {request.title}\n                    <p> <b>Description: </b>{request.description}</p>\n                    <p>Status: {request.status}</p>\n                    <TrackerImage />\n                    <p>Message: {request.message}</p>\n                </div>\n            </>\n        )\n    }\n\n    render() {\n        const { request } = this.context\n\n        let content\n        if (request === undefined) {\n            content = <div className='loading' />\n        } else {\n            content = this.renderRequest()\n        }\n        return (\n            <div className=\"request-page\">\n                {content}\n            </div>\n        )\n    }\n\n\n}\n\n","import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\nimport RequestsContext from '../contexts/RequestsContext';\n\n\nexport default class RequestSent extends Component {\n\n    static defaultProps = {\n        match: { params: {} },\n\n    }\n    static contextType = RequestsContext\n\n\n    render() {\n        return (\n\n            <div className=\"signed-in\">\n                <h2>Your Request has been sent</h2>\n                <Link to={`/requests/:/requestsId`}> Check on or update the status of your request </Link>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport { Route } from \"react-router-dom\";\nimport LandingPage from './LandingPage/LandingPage';\nimport AllRequests from \"./AllRequests/AllRequests\";\nimport Registration from './Registration/Registration';\nimport SignIn from './SignIn/SignIn';\nimport CreateRequest from './CreateRequest/CreateRequest';\nimport SignedIn from './SignedIn/SignedIn';\nimport Nav from './Nav/Nav';\nimport RequestPage from './RequestPage/RequestPage';\nimport RequestSent from './RequestSent/RequestSent';\nimport RequestsContext from './contexts/RequestsContext';\nimport './App.css'\n\n\n\nexport default class App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      requests: [],\n      request: '',\n      isSignedIn: false,\n      setRequest: (request) => {\n        this.setState({ request: request });\n      },\n      setRequests: (requests) => {\n        this.setState({ requests: requests })\n      },\n      updateRequests: (request) => {\n        this.setState({ request: request })\n      }\n\n    }\n  }\n  render() {\n    return (\n      <div className=\"App\" >\n        <RequestsContext.Provider value={this.state} >\n          <nav> <Nav /></nav>\n          <main className='App'>\n            <Route exact path='/' component={LandingPage} />\n            <Route exact path='/requests' component={AllRequests} />\n            <Route path='/register' component={Registration} />\n            <Route path='/sign-in' component={SignIn} />\n            <Route path='/create-request' component={CreateRequest} />\n            <Route path='/signed-in' component={SignedIn} />\n            <Route path='/requests/:requestsId' component={RequestPage} />\n            <Route path='/request-sent' component={RequestSent} />\n          </main>\n        </RequestsContext.Provider>\n      </div>\n\n    );\n  }\n\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter } from \"react-router-dom\";\nimport './index.css';\n\nfunction Index() {\n    return (\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    )\n}\n\nconsole.log(process.env)\n\nReactDOM.render(<Index />, document.getElementById('root'));"],"sourceRoot":""}