{"version":3,"sources":["imgs/hammer-icon.png","imgs/tracker-gif.png","imgs/tracker1.PNG","imgs/tracker2.PNG","imgs/tracker-completed.png","LandingPage/LandingPage.js","config.js","services/token-service.js","services/request-api-service.js","contexts/RequestsContext.js","LoadingPage/LoadingPage.js","AllRequests/AllRequests.js","services/auth-api-service.js","Registration/Registration.js","SignIn/SignIn.js","ApiContext.js","RequestsForm/RequestsForm.js","CreateRequest/CreateRequest.js","SignedIn/SignedIn.js","Nav/Nav.js","TrackerImage/TrackerImage.js","RequestPage/RequestPage.js","RequestSent/RequestSent.js","ThankYou/ThankYou.js","App.js","index.js"],"names":["module","exports","LandingPage","className","src","require","alt","to","Component","API_ENDPOINT","TOKEN_KEY","TokenService","saveAuthToken","token","window","localStorage","setItem","config","getAuthToken","getItem","clearAuthToken","removeItem","hasAuthToken","makeBasicAuthToken","userName","password","btoa","RequestApiService","getAllRequests","fetch","then","res","ok","json","e","Promise","reject","responseJson","requests","getRequest","requestsId","headers","request","React","createContext","LoadingPage","AllRequests","props","state","loading","context","setRequests","setState","catch","error","console","this","map","item","key","id","activeStyle","color","title","description","contextType","RequestsContext","AuthApiService","postUser","user","method","body","JSON","stringify","err","postLogin","email","authToken","postRefreshToken","queueCallbackBeforeExpiry","Registration","handleSubmit","event","preventDefault","target","full_name","landlord_tenant","value","onRegistrationSuccess","history","push","onSubmit","role","Object","keys","htmlFor","type","name","required","defaultProps","SignIn","handleSubmitBasicAuth","ev","hasOwnProperty","onSigninSuccess","isSignedIn","addRequest","updateRequests","RequestsForm","otherProps","join","action","CreateRequest","response","placeholder","onChange","ApiContext","SignedIn","Nav","onClick","TrackerImage","status","message","width","match","params","RequestPage","update","updatedData","setRequest","content","undefined","renderRequest","RequestSent","ThankYou","App","Provider","path","component","exact","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.9eb58c72.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/hammer-icon.4d95127b.png\";","module.exports = __webpack_public_path__ + \"static/media/tracker-gif.e6d0bc3b.png\";","module.exports = __webpack_public_path__ + \"static/media/tracker1.12ed23d8.PNG\";","module.exports = __webpack_public_path__ + \"static/media/tracker2.b297c7c8.PNG\";","module.exports = __webpack_public_path__ + \"static/media/tracker-completed.349cdf0a.png\";","import React, { Component } from 'react';\nimport './LandingPage.css';\nimport { Link } from \"react-router-dom\";\n\nexport default class LandingPage extends Component {\n    render() {\n        return (\n            <>\n                <div className=\"headline\">\n                    <div className=\"icon-image\">\n                        <img src={require('../imgs/hammer-icon.png')} alt=\"maintenancetracker logo\" />\n                        <h2>MaintenanceTracker</h2>\n                    </div>\n\n                    <h3>A space for landlords and tenants to communicate efficiently</h3>\n                    <h4>Tenants submit requests, landlords update progress.</h4>\n                    <div className=\"trackergif\">\n                        <img src={require('../imgs/tracker-gif.png')} alt=\"maintenancetracker gif\" />\n\n                    </div>\n                </div>\n                <div className=\"LandingPage\">\n\n\n                    <div className=\"explanation\">\n\n                        How to get started:\n                        <ul><li><Link to=\"/register\">Register for an account</Link></li>\n\n                            <li><Link to=\"/sign-in\">Sign in with account credentials</Link></li>\n\n                            <li><Link to=\"/create-request\"> Create a request </Link></li></ul>\n\n                        <b>To get started using a demo, head to the sign in page and use the demo credentials.</b>\n\n\n                    </div>\n                </div>\n\n            </>\n        )\n    }\n\n\n\n}","export default {\n    API_ENDPOINT: `https://maintenancetracker-server.herokuapp.com`,\n    TOKEN_KEY: `tokenKey`\n};\n\n// ","import config from '../config'\n\nconst TokenService = {\n    saveAuthToken(token) {\n        window.localStorage.setItem(config.TOKEN_KEY, token)\n    },\n    getAuthToken() {\n        return window.localStorage.getItem(config.TOKEN_KEY)\n    },\n    clearAuthToken() {\n        window.localStorage.removeItem(config.TOKEN_KEY)\n    },\n    hasAuthToken() {\n        return !!TokenService.getAuthToken()\n    },\n    makeBasicAuthToken(userName, password) {\n        return window.btoa(`${userName}:${password}`)\n    },\n}\n\nexport default TokenService\n","import TokenService from './token-service';\nimport config from '../config'\n\n\n\nconst RequestApiService = {\n    getAllRequests() {\n        return fetch(`${config.API_ENDPOINT}/api/requests`)\n            .then(res =>\n                (!res.ok)\n                    ? res.json().then(e => Promise.reject(e))\n                    : res.json()\n            )\n            .then(responseJson => {\n\n                return responseJson\n            })\n            .then(requests => {\n\n                return requests;\n\n\n            })\n\n    },\n    getRequest(requestsId) {\n        return fetch(`${config.API_ENDPOINT}/api/requests/${requestsId}`, {\n            headers: {\n                'authorization': `basic ${TokenService.getAuthToken()}`\n            },\n        })\n            .then(res =>\n                (!res.ok)\n                    ? res.json().then(e => Promise.reject(e))\n                    : res.json()\n            )\n            .then(responseJson => {\n\n                return responseJson\n            })\n            .then(request => {\n\n                return request\n            })\n\n    }\n}\nexport default RequestApiService","import React from 'react';\n\n\nexport default React.createContext();\n","import React, { Component } from 'react';\nimport './LoadingPage.css'\n\nexport default class LoadingPage extends Component {\n    render() {\n        return (\n            <div className=\"loading\">\n                <h2>LOADING . . . </h2>\n            </div>\n\n\n        )\n    }\n}","import React, { Component } from 'react';\nimport RequestApiService from '../services/request-api-service';\nimport RequestsContext from '../contexts/RequestsContext';\nimport LoadingPage from '../LoadingPage/LoadingPage';\n\nimport { NavLink } from \"react-router-dom\";\n\nexport default class AllRequests extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: true\n        }\n    }\n\n    static contextType = RequestsContext\n\n    componentDidMount() {\n        RequestApiService.getAllRequests()\n            .then(requests => { this.context.setRequests(requests); this.setState({ loading: false }) })\n            .catch(error => console.error(error))\n    }\n    render() {\n\n        return (\n            this.state.loading ? <LoadingPage /> :\n                <div className=\"total-request-item\">\n                    <div className=\"request-content\">\n                        <header className=\"totalRequestItem__header\">\n                            <h2> All requests for landlord:</h2>\n                        </header>\n                        {\n                            this.context.requests.map((request, item) => {\n\n                                return (\n\n                                    <div key={item} className=\"requests\">\n\n                                        <p ><NavLink to={`/requests/${request.id}`} activeStyle={{ color: 'green' }}> Request Title: {request.title}</NavLink></p>\n\n                                        <p >{request.description}</p>\n\n                                    </div>\n                                );\n                            })\n                        }\n                    </div>\n                </div>\n\n        )\n    }\n}","import config from '../config'\nimport TokenService from './token-service'\n\nconst AuthApiService = {\n    postUser(user) {\n        return fetch(`${config.API_ENDPOINT}/api/users`, {\n            method: 'POST',\n            headers: {\n                'content-type': 'application/json',\n            },\n            body: JSON.stringify(user),\n        })\n            .then(res => {\n                return res.json();\n\n                // (!res.ok)\n                //     ? res.json().then(e => Promise.reject(e))\n                //     : res.json()\n            })\n            .catch(err => {\n                return err;\n\n            })\n    },\n\n\n    postLogin({ email, password }) {\n        return fetch(`${config.API_ENDPOINT}/api/auth/login`, {\n            method: 'POST',\n            headers: {\n                'content-type': 'application/json',\n            },\n            body: JSON.stringify({ email, password }),\n        })\n            .then(res =>\n                (!res.ok)\n                    ? res.json().then(e => Promise.reject(e))\n                    : res.json()\n            )\n            .then(res => {\n\n                TokenService.saveAuthToken(res.authToken)\n\n                // TokenService.queueCallbackBeforeExpiry(() => {\n                //     AuthApiService.postRefreshToken()\n                // })\n                return res\n            })\n            .catch(err => {\n\n                return (err);\n            })\n    },\n    postRefreshToken() {\n        return fetch(`${config.API_ENDPOINT}/api/auth/refresh`, {\n            method: 'POST',\n            headers: {\n                'authorization': `Bearer ${TokenService.getAuthToken()}`,\n            },\n        })\n            .then(res =>\n                (!res.ok)\n                    ? res.json().then(e => Promise.reject(e))\n                    : res.json()\n            )\n            .then(res => {\n\n                TokenService.saveAuthToken(res.authToken)\n                TokenService.queueCallbackBeforeExpiry(() => {\n                    AuthApiService.postRefreshToken()\n                })\n                return res\n            })\n            .catch(err => {\n\n                console.error(err)\n            })\n    },\n\n\n}\n\n\n\n\nexport default AuthApiService","import React, { Component } from 'react'\n//import { Button, Input, Required } from '../Utils/Utils';\nimport AuthApiService from '../../src/services/auth-api-service';\nimport './Registration.css'\n\nexport default class Registration extends Component {\n    static defaultProps = {\n        onRegistrationSuccess: () => { }\n    }\n\n    state = { error: null }\n\n    handleSubmit = event => {\n        event.preventDefault()\n\n\n        const { full_name, email, password, landlord_tenant } = event.target\n        this.setState({ error: null })\n        AuthApiService.postUser({\n            email: email.value,\n            password: password.value,\n            full_name: full_name.value,\n            landlord_tenant: landlord_tenant.value\n        })\n            .then(user => {\n                full_name.value = ''\n                email.value = ''\n                password.value = ''\n                landlord_tenant.value = ''\n                this.props.onRegistrationSuccess();\n                this.props.history.push(`/sign-in`)\n\n            })\n\n            .catch(res => {\n                this.setState({ error: res.error })\n            })\n\n\n    }\n\n    render() {\n        const { error } = this.state\n        return (\n            <>\n                <div className=\"headline\">\n                    <h3>Register for an account</h3>\n                </div>\n                <div className=\"total-registration-form\">\n                    <form\n                        className='RegistrationForm'\n                        onSubmit={this.handleSubmit}\n                    >\n\n                        <div className=\"alert\" role='alert'>\n                            {error && <p className='red'>{Object.keys(error)}</p>}\n                        </div>\n                        <div className=\"choice\">I am a ...</div>\n                        <div className=\"landlord_tenant\">\n\n                            <div className=\"landlord-radio\">\n                                <label htmlFor=\"landlord_tenant\">Landlord   </label>\n                                <input\n                                    type='radio'\n                                    name='landlord_tenant'\n                                    required\n                                    id='RegistrationForm__landlord'\n                                    value=\"landlord\" />\n\n                            </div>\n                            <div className=\"tenant-radio\">\n                                <label htmlFor=\"tenant_tenant\">       Tenant</label>\n                                <input\n                                    type='radio'\n                                    name='landlord_tenant'\n                                    required\n                                    id='RegistrationForm__tenant'\n                                    value=\"tenant\" />\n\n                            </div>\n                        </div>\n\n                        <div className='full_name'>\n                            <label htmlFor='RegistrationForm__full_name'>\n                                Full name\n                            </label>\n                            <input\n                                type='text'\n                                name='full_name'\n                                required\n                                id='RegistrationForm__full_name' />\n\n                        </div>\n                        <div className='email'>\n                            <label htmlFor='RegistrationForm__email'>\n                                Email\n                            </label>\n                            <input\n                                type='text'\n                                name='email'\n\n                                required\n                                id='RegistrationForm__email' />\n\n                        </div>\n                        <div className=\"password-explanation\"><p>Password must be at least 8 characters long, contain a special character, one upper case letter and one lower case letter.</p></div>\n                        <div className='password'>\n\n\n                            <label htmlFor='RegistrationForm__password'>\n                                Password\n                            </label>\n\n                            <input\n                                type='password'\n                                name='password'\n                                required\n                                id='RegistrationForm__password' />\n\n                        </div>\n                        <button type='submit'> Register</button>\n                    </form>\n                </div>\n            </>\n        )\n    }\n}\n","import React, { Component } from 'react'\nimport TokenService from '../services/token-service'\nimport AuthApiService from '../../src/services/auth-api-service';\n\nexport default class SignIn extends Component {\n    static defaultProps = {\n        onSigninSuccess: () => { },\n        isSignedIn: false,\n    }\n\n    state = { error: null }\n\n    handleSubmitBasicAuth = ev => {\n        ev.preventDefault()\n        const { email, password } = ev.target\n        TokenService.saveAuthToken(TokenService.makeBasicAuthToken(email.value, password.value))\n\n        AuthApiService.postLogin({\n            email: email.value,\n            password: password.value\n        })\n            .then(user => {\n                email.value = ''\n                password.value = ''\n                if (user.hasOwnProperty('error')) {\n                    this.setState({ error: user.error });\n                } else {\n                    this.props.onSigninSuccess()\n\n                    this.setState({ isSignedIn: true })\n                    this.props.history.push(`/signed-in`)\n                }\n\n            })\n            .catch(res => {\n\n            })\n\n    }\n\n    render() {\n        const { error } = this.state\n        return (\n            <>\n                <div className=\"demo-explanation\">\n                    <p>For a demo, use the following credentials:</p>\n                    <p>email: demo@maintenancetracker.com</p>\n                    <p>Password: Demo123!</p>\n                    <p>Otherwise, sign in with your registered information.</p>\n                </div>\n                <form\n                    className='SigninForm'\n                    onSubmit={this.handleSubmitBasicAuth}\n                >\n                    <div className=\"alert \" role='alert'>\n                        {error && <p className='red'>{error}</p>}\n                    </div>\n                    <div className='email'>\n                        <label htmlFor='SigninForm__email'>\n                            Email\n          </label>\n                        <input\n                            type=\"text\"\n                            required name='email' id='SigninForm__email' />\n\n                    </div>\n                    <div className='password'>\n                        <label htmlFor='SigninForm__password'>\n                            Password\n          </label>\n                        <input\n                            required name='password' type='password' id='SigninForm__password' />\n\n                    </div>\n                    <button type=\"submit\">Sign In</button>\n\n                </form>\n            </>\n\n\n\n        )\n    }\n}\n","import React from \"react\";\n\nexport default React.createContext({\n    requests: [],\n    addRequest: () => { },\n    updateRequests: () => { },\n})","import React from \"react\";\n\n\nexport default function RequestsForm(props) {\n    const { className, ...otherProps } = props;\n    return (\n        <form\n            className={[\"Requests-form\", className].join(\" \")}\n            action=\"#\"\n            {...otherProps}\n        />\n    );\n}\n","import React, { Component } from 'react';\nimport config from \"../config\";\nimport ApiContext from \"../ApiContext\";\nimport RequestsForm from '../RequestsForm/RequestsForm';\nimport TokenService from '../services/token-service';\nimport './CreateRequest.css'\n\nexport default class CreateRequest extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            title: '',\n            description: '',\n\n\n        }\n    }\n\n    updateRequests(title, description) {\n        this.setState({ title, description })\n    }\n\n    static defaultProps = {\n        history: {\n            push: () => { }\n        }\n    };\n    static contextType = ApiContext;\n\n\n    addRequest = request => {\n\n        this.setState({\n            requests: [...this.state.request, request]\n        });\n    };\n\n    handleSubmit = event => {\n        event.preventDefault();\n\n\n        const request = {\n            title: event.target[\"title\"].value,\n            description: event.target[\"description\"].value,\n        }\n\n        fetch(`${config.API_ENDPOINT}/api/requests`, {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                'Authorization': `bearer ${TokenService.getAuthToken()}`\n            },\n            body: JSON.stringify(request)\n        })\n            .then(response => {\n                if (!response.ok) {\n                    return response.json().then(e => Promise.reject(e));\n                }\n\n                return response.json()\n            })\n            .then(request => {\n                this.context.addRequest(request);\n                this.props.history.push(`/requests/${request.id}`)\n\n            })\n            .catch(error => {\n                console.error({ error })\n            })\n\n    }\n\n\n\n\n    render() {\n        return (\n            <section className=\"create-request\">\n                <h1>Create a request</h1>\n                <p>You can create your request as a signed-in user. Enter in your request below.</p>\n                <div className=\"request-not-working\"> Request not sending? Make sure you've registered for an account and signed in.</div>\n                <RequestsForm onSubmit={this.handleSubmit}>\n                    <div className=\"field\">\n                        <label htmlFor=\"title\">Title</label>\n                        <input placeholder='Leaky faucet'\n                            type=\"text\"\n                            name='title'\n                            id='title'\n                            onChange={event => this.updateRequests(event.target.value)} />\n                    </div>\n\n                    <div className=\"field\">\n                        <label htmlFor=\"description\">Description:</label>\n                        <input type=\"text\" name='description' id='description' placeholder=\"Faucet in the bathroom leaks when tap is off\"\n                            onChange={event => this.updateRequests(event.target.value)} />\n                    </div>\n\n\n                    <button type='submit' onSubmit={this.handleSubmit}>Send my request</button>\n\n                </RequestsForm>\n\n\n            </section>\n        )\n    }\n}","import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\n\nexport default class SignedIn extends Component {\n    render() {\n        return (\n\n            <div className=\"signed-in\">\n                <h2>Successfully signed in!</h2>\n                <Link to=\"/requests\">View all requests for landlord</Link> |\n                <Link to=\"/create-request\"> Create a request </Link>\n\n            </div>\n        )\n    }\n}","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport TokenService from '../services/token-service';\nimport './Nav.css'\n\nexport default class Nav extends Component {\n    render() {\n        if (TokenService.hasAuthToken() === true) {\n            return (\n                <>\n                    <div className=\"Nav\">\n\n\n                        <div className=\"links\">\n                            <Link to='/' >Home</Link>  |\n                        <Link to='/requests'> All Requests</Link> |\n                         <Link to='/create-request'> Create Request</Link> |\n                            <Link to=\"/logout\" onClick={e => { e.preventDefault(); TokenService.clearAuthToken(); this.props.history.push('/') }}> Logout</Link>\n                        </div>\n                    </div>\n                </>\n            )\n        }\n        else\n            return (\n                <>\n                    <div className=\"Nav\">\n                        <div className=\"links\">\n                            <Link to='/' >Home</Link>  |\n             <Link to='/register'> Register </Link> |\n             <Link to='sign-in'> Sign In </Link>\n                        </div>\n                    </div>\n                </>\n            )\n\n\n\n    }\n\n\n\n}\n","import React, { Component } from 'react';\nimport RequestsContext from '../contexts/RequestsContext';\n\n\n\nexport default class TrackerImage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            title: '',\n            description: '',\n            status: '',\n            message: '',\n\n        }\n    }\n    static defaultProps = {\n        match: { params: {} },\n\n    }\n\n\n\n    static contextType = RequestsContext\n\n    render() {\n\n        if (this.context.request.status === 'received') {\n            return <img src={require('../imgs/tracker1.PNG')} alt=\"trackerfor request received\" width=\"200\" />\n        }\n        if (this.context.request.status === 'started') {\n            return <img src={require('../imgs/tracker2.PNG')} alt=\"tracker for request started\" width=\"200\" />\n        }\n        if (this.context.request.status === 'completed') {\n            return <img src={require('../imgs/tracker-completed.png')} alt=\"tracker for request completed\" width=\"200\" />\n        }\n        else {\n            return <></>\n        }\n    }\n}","import React, { Component } from 'react';\nimport RequestsContext from '../contexts/RequestsContext';\nimport RequestApiService from '../services/request-api-service';\nimport TokenService from '../services/token-service';\nimport config from '../config';\nimport TrackerImage from '../TrackerImage/TrackerImage';\nimport \"../AllRequests/AllRequests.css\"\n\nexport default class RequestPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            title: '',\n            description: '',\n            status: '',\n            message: '',\n\n        }\n    }\n    static defaultProps = {\n        match: { params: {} },\n\n    }\n\n\n\n    static contextType = RequestsContext\n\n\n    updateRequests(updatedData) {\n        this.setState({\n            title: updatedData[0].title,\n            description: updatedData[0].description,\n            status: updatedData[0].status,\n            message: updatedData[0].message,\n\n        })\n\n    }\n\n    componentDidMount() {\n        const { requestsId } = this.props.match.params\n        RequestApiService.getRequest(requestsId)\n            .then(request => this.context.setRequest(request))\n            .catch(error => console.error(error))\n    }\n\n\n    handleSubmit = event => {\n        event.preventDefault();\n\n        const update = {\n            title: this.context.request.title,\n            description: this.context.request.description,\n            status: event.target.status.value,\n            message: event.target.message.value,\n            id: this.context.request.id\n        }\n\n        fetch(`${config.API_ENDPOINT}/api/requests/${this.context.request.id}`, {\n            method: \"PUT\",\n            headers: {\n                \"Content-Type\": \"application/json\",\n                'Authorization': `bearer ${TokenService.getAuthToken()}`\n            },\n            body: JSON.stringify(update)\n        })\n            .then(response => {\n                if (!response.ok) {\n                    return response.json().then(e => Promise.reject(e));\n                }\n\n                return response.json()\n            })\n            .then(update => {\n                this.updateRequests(update);\n                this.props.history.push('/thank-you')\n\n            })\n            .catch(error => {\n                console.error({ error })\n            })\n\n    }\n\n    renderRequest(request) {\n        return <>\n            <div className=\"total-request-item\">\n                <div className=\"request-info\">\n                    <b> Title: </b>\n                    {request.title}\n\n                    <p> <b>Description: </b>{request.description}</p>\n\n                    Message: {request.message}\n                    {request.status &&\n                        <div className=\"status-image\">\n                            <p>Current status: {request.status}</p>\n                            <p><TrackerImage /></p>\n                        </div>\n                    }\n\n                </div>\n                <div className=\"status-form\">\n                    <form onSubmit={this.handleSubmit}>\n                        <div className=\"just-status\">\n                            <div className=\"whats-the-status\">\n                                <label htmlFor=\"status\">What's the status?</label>\n                            </div>\n\n                            <div className=\"status-received\">\n                                <input type='radio' name='status' value=\"received\"\n\n\n                                />  received\n                            </div>\n                            <div className=\"status-start\">\n                                <input type='radio' name='status' value=\"started\"\n\n                                />  started\n                            </div>\n                            <div className=\"status-completed\">\n                                <input type='radio' name='status' value=\"completed\"\n\n                                />  completed\n                            </div>\n                        </div>\n                        <div className=\"message\">\n                            <label htmlFor=\"message\">Message about request</label>\n                            <input type=\"text\" name='message' placeholder=\"None for now\" />\n                            <button type=\"submit\" > Update progress</button>\n                        </div>\n\n\n                    </form>\n                </div>\n            </div>\n        </>\n\n    }\n\n\n    render() {\n        const { request } = this.context\n\n        let content\n        if (request === undefined) {\n            content = <div className='loading' />\n        } else {\n            if (this.state.title === '') {\n                content = this.renderRequest(request)\n            }\n            else {\n                content = this.renderRequest(this.state)\n            }\n        }\n        return (\n            <div className=\"request-page\">\n                {content}\n            </div>\n        )\n    }\n\n\n}\n\n\n\n\n// onChange={event => this.updateRequests(event.target.value)}\n// ","import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\nimport RequestsContext from '../contexts/RequestsContext';\n\n\nexport default class RequestSent extends Component {\n\n    static defaultProps = {\n        match: { params: {} },\n\n    }\n    static contextType = RequestsContext\n\n\n    render() {\n        return (\n\n            <div className=\"signed-in\">\n                <h2>Your Request has been sent</h2>\n                <Link to={`/requests/:/requestsId`}> Check on or update the status of your request </Link>\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\n\nexport default class ThankYou extends Component {\n    render() {\n        return (\n\n            <div className=\"signed-in\">\n                <h2>Thanks for submitting an update!</h2>\n                <Link to=\"/requests\">Back to all requests</Link> |\n                <Link to=\"/create-request\"> Create a request </Link>\n\n            </div>\n        )\n    }\n}","import React, { Component } from 'react';\nimport { Route } from \"react-router-dom\";\nimport LandingPage from './LandingPage/LandingPage';\nimport AllRequests from \"./AllRequests/AllRequests\";\nimport Registration from './Registration/Registration';\nimport SignIn from './SignIn/SignIn';\nimport CreateRequest from './CreateRequest/CreateRequest';\nimport SignedIn from './SignedIn/SignedIn';\nimport Nav from './Nav/Nav';\nimport RequestPage from './RequestPage/RequestPage';\nimport RequestSent from './RequestSent/RequestSent';\nimport ThankYou from './ThankYou/ThankYou';\nimport RequestsContext from './contexts/RequestsContext';\nimport './App.css'\n\n\n\nexport default class App extends Component {\n  constructor() {\n    super();\n    this.state = {\n      requests: [],\n      request: '',\n      isSignedIn: false,\n      setRequest: (request) => {\n        this.setState({ request: request });\n      },\n      setRequests: (requests) => {\n        this.setState({ requests: requests })\n      },\n      updateRequests: (request) => {\n        this.setState({ request: request })\n      }\n\n    }\n  }\n  render() {\n    return (\n      <div className=\"App\" >\n        <RequestsContext.Provider value={this.state} >\n          <nav> <Route path=\"/\" component={Nav} /></nav>\n          <main className='App'>\n            <Route exact path='/' component={LandingPage} />\n            <Route exact path='/requests' component={AllRequests} />\n            <Route path='/register' component={Registration} />\n            <Route path='/sign-in' component={SignIn} />\n            <Route path='/create-request' component={CreateRequest} />\n            <Route path='/signed-in' component={SignedIn} />\n            <Route path='/requests/:requestsId' component={RequestPage} />\n            <Route path='/request-sent' component={RequestSent} />\n            <Route path='/thank-you' component={ThankYou} />\n          </main>\n        </RequestsContext.Provider>\n      </div>\n\n    );\n  }\n\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { BrowserRouter } from \"react-router-dom\";\nimport './index.css';\n\nfunction Index() {\n    return (\n        <BrowserRouter>\n            <App />\n        </BrowserRouter>\n    )\n}\n\n\n\nReactDOM.render(<Index />, document.getElementById('root'));"],"sourceRoot":""}